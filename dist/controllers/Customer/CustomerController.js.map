{"version":3,"sources":["C:\\Users\\Smile\\Desktop\\oi\\src\\controllers\\customer\\CustomerController.ts"],"sourcesContent":["import { GetCustomerByEmail, GetCustomerById, GetCustomers, RegisterCustomer, RemoveById } from \"../../application/services/CustomerServices\";\r\nimport { CustomerRepository } from \"../../infra/repositories/CustomerRepository\";\r\nimport { Request, Response } from \"express\"\r\n\r\nconst customerRepository = new CustomerRepository()\r\nconst getCustomer = new GetCustomers(customerRepository)\r\nconst getCustomerById = new GetCustomerById(customerRepository)\r\nconst getCustomerByEmail = new GetCustomerByEmail(customerRepository)\r\nconst registerCustomer = new RegisterCustomer(customerRepository)\r\nconst removeById = new RemoveById(customerRepository)\r\n\r\n\r\nexport class CustomerController {\r\n  async register(req: Request, res: Response) {\r\n    try {\r\n      const customer = await registerCustomer.execute(req.body)\r\n      res.status(201).json(customer)\r\n    } catch (error) {\r\n      res.status(400).json({message: error})\r\n    }\r\n  }\r\n\r\n  async remove(req: Request, res: Response) {\r\n    try {\r\n      await removeById.execute(req.params)\r\n      res.sendStatus(204)\r\n\r\n    } catch (error) {\r\n      res.status(400).json({message: error})\r\n    }\r\n  }\r\n\r\n  async list(req: Response, res: Response) {\r\n    try {\r\n      const customers = await getCustomer.execute()\r\n      res.status(200).json(customers)\r\n    } catch (error) {\r\n      res.status(400).json({message: error})\r\n    }\r\n  }\r\n\r\n  async getById(req : Request, res : Response) {\r\n    const { id } = req.params\r\n    try {\r\n      const customers = await getCustomerById.execute(id)\r\n      res.status(200).json(customers)\r\n    } catch (error) {\r\n      res.status(400).json({message: error})\r\n    }\r\n  }\r\n\r\n  async getByEmail(req : Request, res : Response) {\r\n    const { email } = req.body\r\n    try {\r\n      const customers = await getCustomerByEmail.execute(email)\r\n      res.status(201).json(customers)\r\n    } catch (error) {\r\n      res.status(400).json({message: error})\r\n    }\r\n  }\r\n}"],"names":["GetCustomerByEmail","GetCustomerById","GetCustomers","RegisterCustomer","RemoveById","CustomerRepository","customerRepository","getCustomer","getCustomerById","getCustomerByEmail","registerCustomer","removeById","CustomerController","register","req","res","customer","execute","body","status","json","error","message","remove","params","sendStatus","list","customers","getById","id","getByEmail","email"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,eAAe,EAAEC,YAAY,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,iDAA8C;AAC9I,SAASC,kBAAkB,QAAQ,iDAA8C;AAGjF,MAAMC,qBAAqB,IAAID;AAC/B,MAAME,cAAc,IAAIL,aAAaI;AACrC,MAAME,kBAAkB,IAAIP,gBAAgBK;AAC5C,MAAMG,qBAAqB,IAAIT,mBAAmBM;AAClD,MAAMI,mBAAmB,IAAIP,iBAAiBG;AAC9C,MAAMK,aAAa,IAAIP,WAAWE;AAGlC,OAAO,MAAMM;IACX,MAAMC,SAASC,GAAY,EAAEC,GAAa,EAAE;QAC1C,IAAI;YACF,MAAMC,WAAW,MAAMN,iBAAiBO,OAAO,CAACH,IAAII,IAAI;YACxDH,IAAII,MAAM,CAAC,KAAKC,IAAI,CAACJ;QACvB,EAAE,OAAOK,OAAO;YACdN,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAACE,SAASD;YAAK;QACtC;IACF;IAEA,MAAME,OAAOT,GAAY,EAAEC,GAAa,EAAE;QACxC,IAAI;YACF,MAAMJ,WAAWM,OAAO,CAACH,IAAIU,MAAM;YACnCT,IAAIU,UAAU,CAAC;QAEjB,EAAE,OAAOJ,OAAO;YACdN,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAACE,SAASD;YAAK;QACtC;IACF;IAEA,MAAMK,KAAKZ,GAAa,EAAEC,GAAa,EAAE;QACvC,IAAI;YACF,MAAMY,YAAY,MAAMpB,YAAYU,OAAO;YAC3CF,IAAII,MAAM,CAAC,KAAKC,IAAI,CAACO;QACvB,EAAE,OAAON,OAAO;YACdN,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAACE,SAASD;YAAK;QACtC;IACF;IAEA,MAAMO,QAAQd,GAAa,EAAEC,GAAc,EAAE;QAC3C,MAAM,EAAEc,EAAE,EAAE,GAAGf,IAAIU,MAAM;QACzB,IAAI;YACF,MAAMG,YAAY,MAAMnB,gBAAgBS,OAAO,CAACY;YAChDd,IAAII,MAAM,CAAC,KAAKC,IAAI,CAACO;QACvB,EAAE,OAAON,OAAO;YACdN,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAACE,SAASD;YAAK;QACtC;IACF;IAEA,MAAMS,WAAWhB,GAAa,EAAEC,GAAc,EAAE;QAC9C,MAAM,EAAEgB,KAAK,EAAE,GAAGjB,IAAII,IAAI;QAC1B,IAAI;YACF,MAAMS,YAAY,MAAMlB,mBAAmBQ,OAAO,CAACc;YACnDhB,IAAII,MAAM,CAAC,KAAKC,IAAI,CAACO;QACvB,EAAE,OAAON,OAAO;YACdN,IAAII,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAACE,SAASD;YAAK;QACtC;IACF;AACF"}